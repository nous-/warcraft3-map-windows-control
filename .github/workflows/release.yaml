name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build_and_release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: zip

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: ${{ matrix.target }}
        default: true

    - name: Build release
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.target }}

    - name: Package release
      run: |
        mkdir -p package
        cp target/${{ matrix.target }}/release/my_project_name package/
        7z a my_project_name-${{ matrix.target }}.${{ matrix.ext }} package/

    - name: Upload release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./my_project_name-${{ matrix.target }}.${{ matrix.ext }}
        asset_name: my_project_name-${{ matrix.target }}.${{ matrix.ext }}
        asset_content_type: application/octet-stream